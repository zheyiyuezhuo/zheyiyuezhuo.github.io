<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Siicei blog</title>
  <icon>https://zheyiyuezhuo.github.io/icon.png</icon>
  
  <link href="https://zheyiyuezhuo.github.io/atom.xml" rel="self"/>
  
  <link href="https://zheyiyuezhuo.github.io/"/>
  <updated>2022-06-24T12:47:03.496Z</updated>
  <id>https://zheyiyuezhuo.github.io/</id>
  
  <author>
    <name>zheyiyuezhuo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NAS系统横评</title>
    <link href="https://zheyiyuezhuo.github.io/2022/06/24/NAS%E7%B3%BB%E7%BB%9F%E6%A8%AA%E8%AF%84/"/>
    <id>https://zheyiyuezhuo.github.io/2022/06/24/NAS%E7%B3%BB%E7%BB%9F%E6%A8%AA%E8%AF%84/</id>
    <published>2022-06-24T12:36:38.000Z</published>
    <updated>2022-06-24T12:47:03.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NAS-体验心得"><a href="#NAS-体验心得" class="headerlink" title="NAS 体验心得"></a>NAS 体验心得</h1><h2 id="自己用过的-NAS-系统"><a href="#自己用过的-NAS-系统" class="headerlink" title="自己用过的 NAS 系统"></a>自己用过的 NAS 系统</h2><ol><li>OMV</li><li>Truenas scale</li><li>Unraid</li></ol><h2 id="1-OMV"><a href="#1-OMV" class="headerlink" title="1. OMV"></a>1. OMV</h2><ul><li><p>优点：</p><ol><li>基于 debian，开源免费</li><li>有镜像源，更新方便</li><li>可以支持多种储存模式：raid，zfs，聚合文件系统等</li><li>支持原生 docker，配合 portainer，配置简单</li></ol></li><li><p>缺点：</p><ol><li>webui 一般，不是很美观，配置也不是特别方便</li><li>每个文件系统优化可能没有其他系统单独集成的好</li><li><strong>网桥和 docker 会冲突，造成某一方无法使用</strong></li></ol></li></ul><h2 id="2-Truenas-scale"><a href="#2-Truenas-scale" class="headerlink" title="2. Truenas scale"></a>2. Truenas scale</h2><ul><li><p>优点：</p><ol><li>系统基于 debian，开源免费</li><li>支持 ZFS，且有扩容的希望，配置比较多</li><li>可以支持 docker 了，且有社区应用支持</li></ol></li><li><p>缺点：</p><ol><li>服务器在国外，正常使用就需要魔法</li><li>docker 基于 K3S，且社区应用的部署必须要外网环境，比较麻烦</li><li>app 拉取需要魔法才能部署成功</li><li>暂时无法扩容硬盘，未来可能</li><li>配置要求较高，特别是内存</li></ol></li></ul><h2 id="3-Unraid"><a href="#3-Unraid" class="headerlink" title="3. Unraid"></a>3. Unraid</h2><ul><li><p>优点：</p><ol><li>webui 颜值高，且还算易用</li><li>每次重启后会使所有直接对系统的修改复原，需要配合 go 文件进行使用</li><li>加盘容易，只要是是小于校验盘容量的盘，可以直接加</li><li>有缓存机制，写入文件时可以先写入缓存盘（ssd）来保存速度</li><li>docker 部署容易，且应用商店各种 docker 任你选择，而且有很多模板</li></ol></li><li><p>缺点：</p><ol><li>需要付费购买</li><li>系统基于某个小众的 Linux，不宜用</li><li>Docker 是部署在一个虚拟硬盘里来使用的，多了可能空间满，需要扩容</li><li>更新慢，几乎一年一次大更新，比如 docker 版本升级等</li><li>每次重启后会使所有直接对系统的修改复原，需要配合 go 文件进行使用</li><li>读写文件时对系统资源消耗大，且读取速度慢</li><li>感觉适用于千兆家庭网络，不适合万兆环境</li><li>往 unraid 写入可以使用 ssd 做缓存，但是 unraid 往电脑复制时无法加速</li><li>一个月一次校验，2 个 12T 盘一次校验 2 天时间，期间复制 10-20m&#x2F;s，像亲戚来了</li><li>下载盘无法设置不参与校验</li></ol></li></ul><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"d597eef3d48c1aee5b58","clientSecret":"66bd818e24fe9a4368d8b79912d5b4fc6b6f97af","repo":"zheyiyuezhuo/zheyiyuezhuo.github.io","owner":"zheyiyuezhuo","admin":"zheyiyuezhuo","id":"location.href","distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;NAS-体验心得&quot;&gt;&lt;a href=&quot;#NAS-体验心得&quot; class=&quot;headerlink&quot; title=&quot;NAS 体验心得&quot;&gt;&lt;/a&gt;NAS 体验心得&lt;/h1&gt;&lt;h2 id=&quot;自己用过的-NAS-系统&quot;&gt;&lt;a href=&quot;#自己用过的-NAS-系统&quot;</summary>
        
      
    
    
    
    <category term="学习笔记" scheme="https://zheyiyuezhuo.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="NAS" scheme="https://zheyiyuezhuo.github.io/tags/NAS/"/>
    
    <category term="OMV" scheme="https://zheyiyuezhuo.github.io/tags/OMV/"/>
    
    <category term="Unraid" scheme="https://zheyiyuezhuo.github.io/tags/Unraid/"/>
    
    <category term="truenas-sclae" scheme="https://zheyiyuezhuo.github.io/tags/truenas-sclae/"/>
    
  </entry>
  
  <entry>
    <title>Github部署基于hexo的静态网页</title>
    <link href="https://zheyiyuezhuo.github.io/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/"/>
    <id>https://zheyiyuezhuo.github.io/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/</id>
    <published>2022-06-24T10:53:25.000Z</published>
    <updated>2022-10-31T19:05:20.169Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-的安装"><a href="#hexo-的安装" class="headerlink" title="hexo 的安装"></a>hexo 的安装</h2><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p><a href="https://mrzgh.top/posts/1543b37f/">Git Protable 配置</a></p><ol><li>下载<a href="https://git-scm.com/">git</a>，可以下载便携版</li><li>设置 windows 环境变量</li><li>创建.config 目录<ol><li>里面创建.gitconfig</li><li>里面填写</li></ol></li></ol><h3 id="配置-git-与-github-通信"><a href="#配置-git-与-github-通信" class="headerlink" title="配置 git 与 github 通信"></a>配置 git 与 github 通信</h3><ol><li>shell 输入：</li></ol><pre class="highlight"><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮箱&quot;</span><br></pre><ol start="2"><li><p>复制 ssh 密钥<br>将<code>C:\Users\&#123;name&#125;\.ssh\id_rsa.pub</code>的内容复制到<a href="https://github.com/settings/ssh/new">Github 的新建 ssh 密钥上</a></p></li><li><p>验证<br>shell 输入<code>ssh git@github.com</code>如果需要就写<code>yes</code>，直到输入</p></li></ol><pre class="highlight"><span class="line">Hi zheyiyuezhuo! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre><ol start="4"><li>申请 tokens<br>进入<a href="https://github.com/settings/tokens">github</a>点击<code>Generate new token</code>，选择需要的选项勾选 ✔，复制生成的密钥<code>ghp_xxx123456</code></li></ol><h3 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h3><ol><li>下载<a href="https://nodejs.org/en/download/">node</a></li><li>可选择<code>Binary(.zip)</code>，只需要添加环境变量</li></ol><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><ol><li>使用命令安装：<code>npm install hexo-cli -g</code></li><li>hexo 安装在 node 目录下的<code>node_modules</code>文件夹下</li><li>将 Hexo 所在的目录的<code>node_modules</code>添加到环境变量</li><li>就可以直接在 cmd 正常使用 hexo 命令</li><li>卸载：<code>npm uninstall hexo-cli -g</code></li></ol><h3 id="npm-无法连接服务器"><a href="#npm-无法连接服务器" class="headerlink" title="npm 无法连接服务器"></a>npm 无法连接服务器</h3><p>国内由于网络原因可能无法连上 npm 的服务器，此时需要设置代理</p><ol><li>首先查看 npm 是否有代理存在<ul><li>输入：<code>npm config ls -l</code></li><li>查看所有配置，注意<code>proxy</code>选项</li></ul></li><li>npm 默认没有设置代理，为<code>null</code>，需要为他设置代理才能下载插件，</li><li>npm 设置代理方式有好几种，<a href="https://cloud.tencent.com/developer/article/1592145">点击链接查看</a></li><li>我使用设置<code>用户配置文件</code>的方式来修改代理，这样感觉方便管理（删除）<ul><li>输入：<code>config get userconfig</code></li><li>查看<code>.npmrc</code>的位置</li></ul></li><li>修改<code>.npmrc</code>，如该目录下没有该文件<ul><li>在该目录下创建<code>.npmrc</code>，在里面填写</li></ul></li></ol><pre class="highlight"><span class="line">proxy=你的反向代理地址</span><br><span class="line">https-proxy=http://127.0.0.1:1080</span><br></pre><ol start="6"><li><code>npm config list</code>：查看配置更改</li><li>输入：<code>npm config ls -l</code><ul><li>再次查看所有配置，注意<code>proxy</code>选项</li></ul></li></ol><h2 id="hexo-的配置"><a href="#hexo-的配置" class="headerlink" title="hexo 的配置"></a>hexo 的配置</h2><p>在想要的文件夹下点击 cmd 输入：<br><code>hexo init</code></p><p>文件夹内目录如下：</p><pre class="highlight"><span class="line">.</span><br><span class="line">├── _config.yml # 网站的 配置 信息</span><br><span class="line">├── package.json # 应用程序的信息</span><br><span class="line">├── scaffolds # 模版 文件夹</span><br><span class="line">├── source # 资源文件夹是存放用户资源的地方</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes # 主题 文件夹</span><br></pre><h3 id="安装发布插件"><a href="#安装发布插件" class="headerlink" title="安装发布插件"></a>安装发布插件</h3><p>在 hexo 根目录下 shell 输入：<br><code>npm install hexo-deployer-git --save</code></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><ol><li>使用命令安装<code>npm install hexo-theme-kaze</code></li><li>在<code>./themes</code>下输入<code>git clone https://github.com/theme-kaze/hexo-theme-kaze.git</code>，并且将<code>hexo-theme-kaze</code>重命名为<code>kaze</code></li><li>修改<code>./_config.yml</code>文件，将主题修改为<code>theme: kaze</code></li></ol><h4 id="hexo-主题"><a href="#hexo-主题" class="headerlink" title="hexo 主题."></a>hexo 主题.</h4><ol><li><a href="https://github.com/sun11/hexo-theme-paperbox">hexo-theme-paperbox</a><ul><li><a href="https://sun11.me/">demo</a><br><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/184230.png" class="lozad post-image"src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/184230.png"></li></ul></li><li><a href="https://github.com/theme-kaze/hexo-theme-Kaze">hexo-theme-kaze</a><ul><li><a href="https://demo.theme-kaze.top/">demo</a></li><li><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/184753.png" class="lozad post-image"src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/184753.png"></li></ul></li><li><a href="https://github.com/ppoffice/hexo-theme-icarus">hexo-theme-icarus</a><ul><li><a href="https://ppoffice.github.io/hexo-theme-icarus/">demo</a></li><li><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/185053.png" class="lozad post-image"src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/185053.png"></li></ul></li><li><a href="https://github.com/Haojen/hexo-theme-Claudia">hexo-theme-Claudia</a><ul><li><a href="https://haojen.github.io/Claudia-theme-blog/">demo</a></li><li><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/195208.png" class="lozad post-image"src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/195208.png"></li></ul></li><li></li></ol><h3 id="安装-rss"><a href="#安装-rss" class="headerlink" title="安装 rss"></a>安装 rss</h3><p>我用的是<a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a>插件</p><p>安装<code>hexo-generator-feed</code></p><pre class="highlight"><span class="line">npm install hexo-generator-feed --save</span><br></pre><p>在<code>_config.yml</code> 里添加</p><pre class="highlight"><span class="line"><span class="attr">plugin:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">atom</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rss2</span></span><br><span class="line">  <span class="attr">path:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rss2.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&quot; &quot;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span></span><br></pre><p>然后使用<code>hexo g</code>生成<code>atom.xml</code>文件就好</p><h3 id="安装评论系统"><a href="#安装评论系统" class="headerlink" title="安装评论系统"></a>安装评论系统</h3><p>我用的是<a href="https://github.com/snowdreams1006/hexo-plugin-gitalk">hexo-plugin-gitalk</a>插件，他是基于<a href="https://github.com/gitalk/gitalk">gitalk</a>，利用 github 自带的<code>issues</code>功能实现的。</p><p>首先，选择一个公共 github 存储库（已存在或创建一个新的 github 存储库）用于存储评论，<br>然后需要创建<code>GitHub Application</code>，如果没有<a href="https://github.com/settings/applications/new">点击这里申请</a>，Authorization callback URL 填写当前使用插件页面的域名。</p><p>创建<code>GitHub Application</code></p><p><code>Application name</code>：<code>hexo-gitalk</code></p><ul><li>填写应用程序名称，随意</li></ul><p><code>Homepage URL</code>：<code>https://zheyiyuezhuo.github.io</code></p><ul><li>应用程序主页的完整 URL</li></ul><p><code>Application description</code>：随意</p><ul><li>描述随意填写</li></ul><p><code>Authorization callback URL</code>：<code>https://zheyiyuezhuo.github.io</code></p><ul><li>填写当前使用插件页面的域名。</li></ul><p>点击<code>Register application</code>获取，在生成的页面复制<code>clientID</code>和<code>clientSecret</code></p><p>安装<code>gitalk</code>（可能需要）</p><pre class="highlight"><span class="line">npm i --save gitalk</span><br></pre><p>安装<code>hexo-plugin-gitalk</code></p><pre class="highlight"><span class="line">npm install hexo-plugin-gitalk --save</span><br></pre><p>在<code>_config.yml</code> 最后面添加</p><pre class="highlight"><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">clientID:</span> <span class="string">GitHub</span> <span class="string">Application</span> <span class="string">Client</span> <span class="string">ID.</span></span><br><span class="line">  <span class="attr">clientSecret:</span> <span class="string">GitHub</span> <span class="string">Application</span> <span class="string">Client</span> <span class="string">Secret.</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">GitHub</span> <span class="string">repository，比如：zheyiyuezhuo.github.io</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">GitHub</span> <span class="string">repository</span> <span class="string">所有者，比如：zheyiyuezhuo</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">对这个</span> <span class="string">repository</span> <span class="string">有写权限的用户，比如：zheyiyuezhuo</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">location.href</span></span><br><span class="line">  <span class="attr">distractionFreeMode:</span> <span class="literal">false</span></span><br></pre><h2 id="hexo-的使用"><a href="#hexo-的使用" class="headerlink" title="hexo 的使用"></a>hexo 的使用</h2><h3 id="创建新页面"><a href="#创建新页面" class="headerlink" title="创建新页面"></a>创建新页面</h3><pre class="highlight"><span class="line">hexo n &quot;&lt;title&gt;&quot;</span><br><span class="line">hexo new &quot;&lt;title&gt;&quot;</span><br></pre><h3 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h3><pre class="highlight"><span class="line">hexo s</span><br><span class="line">hexo server</span><br></pre><h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><pre class="highlight"><span class="line">hexo g</span><br><span class="line">hexo generate</span><br></pre><h3 id="部署-x2F-发布"><a href="#部署-x2F-发布" class="headerlink" title="部署&#x2F;发布"></a>部署&#x2F;发布</h3><pre class="highlight"><span class="line">hexo d</span><br><span class="line">hexo deploy</span><br></pre><p>第一次部署的时候需要选择证书模式<br><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/200512.png" class="lozad post-image"src="/2022/06/24/Github%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Ehexo%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/200512.png"></p><pre class="highlight"><span class="line">证书助手选择器</span><br><span class="line">选择凭据帮助器</span><br><span class="line">&lt;无助手&gt;</span><br><span class="line">缓存</span><br><span class="line">store # 将凭据保存在磁盘上，长久有效；</span><br><span class="line">Winced</span><br><span class="line">manager-corel</span><br></pre><p>建议选择默认的，别像图中勾选总是就好</p><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"d597eef3d48c1aee5b58","clientSecret":"66bd818e24fe9a4368d8b79912d5b4fc6b6f97af","repo":"zheyiyuezhuo.github.io","owner":"zheyiyuezhuo","admin":["zheyiyuezhuo"],"id":"location.href","distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;hexo-的安装&quot;&gt;&lt;a href=&quot;#hexo-的安装&quot; class=&quot;headerlink&quot; title=&quot;hexo 的安装&quot;&gt;&lt;/a&gt;hexo 的安装&lt;/h2&gt;&lt;h3 id=&quot;安装-git&quot;&gt;&lt;a href=&quot;#安装-git&quot;</summary>
        
      
    
    
    
    <category term="学习笔记" scheme="https://zheyiyuezhuo.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="其他" scheme="https://zheyiyuezhuo.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="hexo" scheme="https://zheyiyuezhuo.github.io/tags/hexo/"/>
    
    <category term="博客部署" scheme="https://zheyiyuezhuo.github.io/tags/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
